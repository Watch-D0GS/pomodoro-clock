{"version":3,"sources":["Components/BreakLabel.js","Components/SessionLabel.js","Components/TimerLabel.js","App.js","index.js"],"names":["BreakLabel","id","Button","onClick","this","props","increment","Add","breakLength","decrement","Remove","Component","SessionLabel","aria-label","sessionLength","TimerLabel","indicator","time","audio","document","getElementById","App","countdown","undefined","state","timeLeft","timerIndicator","running","handleDecrement","bind","handleIncrement","reset","handleStartStop","convertToTime","clearInterval","setState","pause","currentTime","e","target","setInterval","play","count","min","Math","floor","sec","Paper","elevation","className","variant","color","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.053c5d79.chunk.js","sourcesContent":["import React,{Component}from 'react';\nimport {Button} from '@material-ui/core';\nimport {Add,Remove} from '@material-ui/icons';\n\nclass BreakLabel extends Component{\n    render(){\n        return(\n            <div id='break-label'>\n                Break\n                <Button id='break-increment' onClick={this.props.increment}>\n                    <Add />\n                </Button>\n                <div id='break-length'>{this.props.breakLength}</div>\n                <Button id='break-decrement' onClick={this.props.decrement}>\n                    <Remove />\n                </Button>\n            </div>\n        )\n    }\n}\n\nexport default BreakLabel;","import React,{Component} from 'react';\nimport {Button} from '@material-ui/core';\nimport {Add,Remove} from '@material-ui/icons';\n\nclass SessionLabel extends Component{\n    render(){\n        return(\n            <div id='session-label'>\n                Session\n                <Button aria-label='increment' id='session-increment' onClick={this.props.increment}>\n                    <Add onClick={this.props.increment} />\n                </Button>\n                <div id='session-length'>{this.props.sessionLength}</div>\n                <Button aria-label='decrement' id='session-decrement' onClick={this.props.decrement}>\n                    <Remove onClick={this.props.decrement} />\n                </Button>\n            </div>\n        )\n    }\n}\n\nexport default SessionLabel;","import React,{Component} from 'react';\n\nclass TimerLabel extends Component{\n    render(){\n        return(\n            <div id='timer-label'>{this.props.indicator}\n                <div id='time-left'>{this.props.time}</div>\n            </div>\n        )\n    }\n}\n\nexport default TimerLabel;","import React,{Component} from 'react';\nimport './App.css';\nimport BreakLabel from './Components/BreakLabel';\nimport SessionLabel from './Components/SessionLabel';\nimport TimerLabel from './Components/TimerLabel';\nimport {Button,Paper} from '@material-ui/core';\nconst audio=document.getElementById('beep');\nclass App extends Component{\n  constructor(props){\n    super (props);\n    this.countdown=undefined;\n    this.state={\n      breakLength:5,\n      sessionLength:25,\n      timeLeft:25*60,\n      timerIndicator:'POMODORO',\n      running:false\n    }\n    this.handleDecrement=this.handleDecrement.bind(this);\n    this.handleIncrement=this.handleIncrement.bind(this);\n    this.reset=this.reset.bind(this);\n    this.handleStartStop=this.handleStartStop.bind(this);\n    this.convertToTime=this.convertToTime.bind(this);\n  }\n  componentWillMount(){\n    clearInterval(this.countdown);\n  }\n  reset(){\n    this.setState({\n      breakLength:5,\n      sessionLength:25,\n      timeLeft:25*60,\n      timerIndicator:'POMODORO',\n      running:false\n    })\n    clearInterval(this.countdown);\n\n    audio.pause()\n    audio.currentTime=0;\n  }\n  handleDecrement(e){\n    const {id}=e.target;\n    if(id==='break-decrement' && this.state.breakLength>1){\n      this.setState({\n        breakLength:this.state.breakLength-1,\n      })\n    }\n    else if (id==='session-decrement' && this.state.sessionLength>1){\n      this.setState({\n        sessionLength:this.state.sessionLength-1,\n        timeLeft:(this.state.sessionLength-1)*60\n      })\n    }\n  }\n  handleIncrement(e){\n    const {id}=e.target;\n    if(id==='break-increment' && this.state.breakLength<60){\n      this.setState({\n        breakLength:this.state.breakLength+1,\n      })\n    }\n    else if (id==='session-increment' && this.state.sessionLength<60){\n      this.setState({\n        sessionLength:this.state.sessionLength+1,\n        timeLeft:(this.state.sessionLength+1)*60\n      })\n    }\n  }\n  handleStartStop(){\n    const {running}=this.state;\n    if(running){\n      clearInterval(this.countdown);\n      this.setState({\n        running:false\n      })\n    }else {\n      this.setState({\n        running:true\n      })\n      this.countdown=setInterval(()=>{\n        const{\n          breakLength,\n          sessionLength,\n          timeLeft,\n          timerIndicator\n        }=this.state;\n        if(timeLeft===0){\n          this.setState({\n            timerIndicator:(timerIndicator==='POMODORO')?'BREAK TIME':'POMODORO',\n            timeLeft:(timerIndicator==='POMODORO')?breakLength*60:sessionLength*60\n          })\n          audio.play()\n        }else{\n          this.setState({\n            timeLeft:timeLeft-1\n          })\n        }\n      },1000)\n    }\n  }\n  convertToTime(count){\n    let min=Math.floor(count/60);\n    let sec=count%60;\n\n    min=(min<10)?('0'+min):min;\n    sec=(sec<10)?('0'+sec):sec;\n\n    return(`${min}:${sec}`);\n  }\n  render(){\n    return(\n      <Paper elevation={3} className='container'>\n        <BreakLabel increment={this.handleIncrement} breakLength={this.state.breakLength} decrement={this.handleDecrement} />\n        <div className='interface'>\n          <TimerLabel indicator={this.state.timerIndicator} time={this.convertToTime(this.state.timeLeft)} />\n          <div className='btn-grp'>\n            <Button variant='contained' color='primary' id='start_stop' onClick={this.handleStartStop}>start/stop</Button>\n            <Button variant='contained' color='secondary' id='reset' onClick={this.reset}>Reset</Button>\n          </div>\n        </div>\n        <SessionLabel increment={this.handleIncrement} sessionLength={this.state.sessionLength} decrement={this.handleDecrement} />\n      </Paper>\n    )\n  }  \n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}